import 'package:flutter/material.dart';
import 'App1.dart';
import 'App2.dart'; // BossTimerApp 임포트
import 'Signup.dart';
import 'package:url_launcher/url_launcher.dart';  // url_launcher 임포트
import 'package:flutter_web_plugins/flutter_web_plugins.dart'; // 웹 설정 패키지 임포트
import 'package:go_router/go_router.dart';  // GoRouter 패키지 임포트


void main() {
  setUrlStrategy(PathUrlStrategy()); // 웹에서 #을 없애는 설정

  runApp(MyApp());
}


class InputApp extends StatefulWidget {
  @override
  State<StatefulWidget> createState() => _InputAppState();
}

class _InputAppState extends State<InputApp> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      routerDelegate: MyRouterDelegate(),
      routeInformationParser: MyRouteInformationParser(),
    );
  }
}

// 📌 경로 정의
class MyRoutePath {
  final String? id;

  MyRoutePath.input() : id = null;
  MyRoutePath.home(this.id);
  MyRoutePath.error() : id = null;
}


// 📌 Route Parser
class MyRouteInformationParser extends RouteInformationParser<MyRoutePath> {
  // 유효한 아이디 리스트

  @override
  Future<MyRoutePath> parseRouteInformation(RouteInformation routeInformation) async {
    final uri = Uri.parse(routeInformation.location ?? '/');

    // 아이디가 없는 경우, 아이디 입력 화면으로 이동
    if (uri.pathSegments.isEmpty) {
      return MyRoutePath.input();
    }

    // 아이디가 유효한지 체크(이상하게 없어도 잘돌아감..)
    if (uri.pathSegments.length >= 1) {
      return MyRoutePath.home('');  // 유효한 아이디로 홈 화면으로 이동
    }

    // 유효하지 않은 아이디는 Error 화면으로 이동
    return MyRoutePath.error();
  }

  @override
  RouteInformation restoreRouteInformation(MyRoutePath configuration) {
    if (configuration.id == null)
      return RouteInformation(location: '/input');
    else
      return RouteInformation(location: '/${configuration.id}');
  }
}


// 📌 Router Delegate
class MyRouterDelegate extends RouterDelegate<MyRoutePath>
    with ChangeNotifier, PopNavigatorRouterDelegateMixin<MyRoutePath> {
  String? selectId;
  final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();
  final List<String> validIds = ['Park@hanmail.net', 'User123'];


  @override
  MyRoutePath get currentConfiguration {
    if (selectId != null) {
      return MyRoutePath.home(selectId);
    } else {
      return MyRoutePath.error();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Navigator(
      key: navigatorKey,
      pages: [
        if (selectId == null) MaterialPage(child: InputScreen(_onIdEntered)),
        if (validIds.contains(selectId)) MaterialPage(child: HomeScreen()),
        if (selectId != null && !validIds.contains(selectId)) MaterialPage(child: ErrorScreen()),  // 수정된 부분
      ],
      onPopPage: (route, result) {
        if (!route.didPop(result)) return false;

        selectId = null;
        notifyListeners();
        return true;
      },
    );
  }

  @override
  Future<void> setNewRoutePath(MyRoutePath configuration) async {
    if (configuration.id != null) {
      selectId = configuration.id;
    }
  }

  void _onIdEntered(String id) {
    selectId = id;
    notifyListeners();
  }

  void _onItemSelected(String id) {
    selectId = id;
    notifyListeners();
  }
}

// 📌 아이디 입력 화면
class InputScreen extends StatelessWidget {
  final Function(String) onIdEntered;

  InputScreen(this.onIdEntered);

  final TextEditingController _controller = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        toolbarHeight: 150,
        // AppBar의 높이를 설정합니다.
        flexibleSpace: Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('assets/images/boss_timer_background.jpg'),
              fit: BoxFit.cover, // 이미지가 AppBar를 가득 채우도록 설정
            ),
          ),
        ),
        title: Text(
          "린저씨의 세계로 오신걸 환영합니다!",
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        centerTitle: true,
        actions: [
          TextButton(
            onPressed: () {
              context.go('/signup'); //signup 화면으로 이동
            },
            child: Text(
              "회원가입",
              style: TextStyle(color: Colors.white,
                  fontSize: 18,
                  fontWeight: FontWeight.bold),
            ),
          ),
        ],
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0), // 화면 여백 추가
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              // 아이디 입력 필드
              TextField(
                controller: _controller,
                decoration: InputDecoration(
                  labelText: '아이디를 입력하세요',
                  labelStyle: TextStyle(color: Colors.blueAccent, fontSize: 18),
                  // 라벨 색상 및 크기
                  hintText: '이메일 아이디 입니다.',
                  // 힌트 텍스트
                  hintStyle: TextStyle(color: Colors.grey[500], fontSize: 16),
                  // 힌트 텍스트 스타일
                  filled: true,
                  fillColor: Colors.grey[200],
                  // 배경색
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(12), // 둥근 모서리
                    borderSide: BorderSide(color: Colors.blueAccent, width: 2),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(12),
                    borderSide: BorderSide(color: Colors.blueAccent, width: 2),
                  ),
                  enabledBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(12),
                    borderSide: BorderSide(
                        color: Colors.blueAccent.withOpacity(0.5), width: 2),
                  ),
                ),
                style: TextStyle(fontSize: 18), // 텍스트 크기
              ),
              SizedBox(height: 20), // 간격

              // 확인 버튼
              ElevatedButton(
                onPressed: () => onIdEntered(_controller.text),
                child: Text(
                  '확인',
                  style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                ),
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.blueAccent,
                  // 버튼 배경색
                  foregroundColor: Colors.white,
                  // 버튼 텍스트 색
                  padding: EdgeInsets.symmetric(horizontal: 30, vertical: 12),
                  // 버튼 패딩
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12), // 버튼 모서리 둥글게
                  ),
                  shadowColor: Colors.blueAccent.withOpacity(0.4),
                  // 그림자 효과
                  elevation: 6, // 그림자 깊이
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}


// 📌 에러 화면
class ErrorScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        toolbarHeight: 150,
        // AppBar의 높이를 설정합니다.
        flexibleSpace: Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('assets/images/boss_timer_background.jpg'),
              fit: BoxFit.cover, // 이미지가 AppBar를 가득 채우도록 설정
            ),
          ),
        ),
        title: Text(
          "린저씨의 세계로 오신걸 환영합니다!",
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        centerTitle: true,
        actions: [
          TextButton(
            onPressed: () {
              context.go('/signup'); //signup 화면으로 이동
            },
            child: Text(
              "회원가입",
              style: TextStyle(color: Colors.white,
                  fontSize: 18,
                  fontWeight: FontWeight.bold),
            ),
          ),
        ],
      ),
      body: Center(
        child: Text(
          '우측상단에 회원가입후 결제를 해야 사용할수 있습니다',
          style: TextStyle(fontSize: 24, color: Colors.red),
        ),
      ),
    );
  }
}


class MyApp extends StatelessWidget {
  final GoRouter _router = GoRouter(
    initialLocation: '/input', // 앱 시작 시 '/input' 페이지로 이동
    routes: [
      GoRoute(path: '/', builder: (context, state) => HomeScreen()),
      GoRoute(path: '/input', builder: (context, state) => InputApp()),
      GoRoute(path: '/one', builder: (context, state) => App1()),
      GoRoute(path: '/two', builder: (context, state) => BossTimerApp()),
      GoRoute(path: '/signup', builder: (context, state) => Join())
    ],
  );

  @override
  Widget build(BuildContext context) {
    return MaterialApp.router(
      debugShowCheckedModeBanner: false,
      routerConfig: _router,  // GoRouter 설정
    );
  }
}

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  List<String> mainSelection1 = ['고정보스시간'];
  List<String> mainSelection2 = ['보탐스케줄러'];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        toolbarHeight: 150,
        flexibleSpace: Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('assets/images/boss_timer_background.jpg'),
              fit: BoxFit.cover,
            ),
          ),
        ),
        title: Text(
          "리니지M 보스체크",
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        centerTitle: true,
      ),
      body: Column(
        children: [
          Expanded(
            child: Row(
              children: [
                // 첫 번째 리스트 (mainSelection1)
                Expanded(
                  child: GridView.builder(
                    shrinkWrap: true,
                    padding: EdgeInsets.all(10),
                    itemCount: mainSelection1.length,
                    scrollDirection: Axis.vertical,
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 1,
                      childAspectRatio: 1,
                    ),
                    itemBuilder: (context, index) {
                      return InkWell(
                        onTap: () {
                          debugPrint("고정보스시간 버튼 클릭됨!");
                          context.go('/one'); // GoRouter 사용
                        },
                        child: Card(
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                          ),
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Text(mainSelection1[index], style: TextStyle(fontSize: 18)),
                              SizedBox(height: 10),
                              Expanded(
                                child: Container(
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(10),
                                    image: DecorationImage(
                                      image: AssetImage('assets/images/Monster/피닉스.jpg'),
                                      fit: BoxFit.cover,
                                      colorFilter: ColorFilter.mode(
                                        Colors.black.withOpacity(0.7),
                                        BlendMode.dstATop,
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
                ),
                // 두 번째 리스트 (mainSelection2)
                Expanded(
                  child: GridView.builder(
                    shrinkWrap: true,
                    padding: EdgeInsets.all(10),
                    itemCount: mainSelection2.length,
                    scrollDirection: Axis.vertical,
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 1,
                      childAspectRatio: 1,
                    ),
                    itemBuilder: (context, index) {
                      return InkWell(
                        onTap: () {
                          debugPrint("보탐스케줄러 버튼 클릭됨!");
                          context.go('/two'); // GoRouter 사용
                        },
                        child: Card(
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                          ),
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Text(mainSelection2[index], style: TextStyle(fontSize: 18)),
                              SizedBox(height: 10),
                              Expanded(
                                child: Container(
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(10),
                                    image: DecorationImage(
                                      image: AssetImage('assets/images/Monster/거대드레이크.jpg'),
                                      fit: BoxFit.cover,
                                      colorFilter: ColorFilter.mode(
                                        Colors.black.withOpacity(0.7),
                                        BlendMode.dstATop,
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
                ),
              ],
            ),
          ),
          SizedBox(height: 20),
        ],
      ),
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _selectedIndex,
        onTap: _onItemTapped,
        items: const <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: '업데이트',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.search),
            label: '아이템시세',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.account_circle),
            label: '커뮤니티',
          ),
        ],
      ),
    );
  }

  int _selectedIndex = 0;

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });

    if (index == 0) {
      _launchURL('https://lineagem.plaync.com/board/cm_story/list');
    } else if (index == 1) {
      _launchURL('https://lineagem.plaync.com/price/itemprice/index/?serverid=all');
    } else if (index == 2) {
      _launchURL('https://lineagem.plaync.com/board/all/list');
    }
  }

  void _launchURL(String url) async {
    if (await canLaunch(url)) {
      await launch(url);
    } else {
      throw 'Could not launch $url';
    }
  }
}
